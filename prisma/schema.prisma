generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Address {
  id           Int       @id @default(autoincrement())
  addressLine1 String
  addressLine2 String?
  city         String
  province     String
  postalCode   String
  country      String    @default("Canada")
  profileId    Int       @unique
  createdAt    DateTime  @default(now())
  updatedAt    DateTime?
  Profile      Profile   @relation(fields: [profileId], references: [id])
}

model Otp {
  id        Int       @id @default(autoincrement())
  otp       String    @unique
  userId    Int       @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  User      User      @relation(fields: [userId], references: [id])
}

model Profile {
  id        Int       @id @default(autoincrement())
  firstName String
  lastName  String
  userId    Int       @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  Address   Address?
  User      User      @relation(fields: [userId], references: [id])
  items Item[]
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  password  String
  verified  Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime?
  Otp       Otp?
  Profile   Profile?
}

model Item {
  id Int @id @default(autoincrement())
  name String
  price Float
  description String?
  stocks Int
  photos String[]
  isFreeShipping Boolean
  isAvailable Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime?
  //relationships
  conditionId Int
  condition Condition @relation(fields: [conditionId], references: [id])
  sellerId Int
  seller Profile @relation(fields: [sellerId], references: [id])
  categoryId Int
  category Category @relation(fields: [categoryId], references: [id])
  shippingDetail ShippingDetail?
}

model Condition {
  id Int @id @default(autoincrement())
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime?
  items Item[]
}

model Category {
  id Int @id @default(autoincrement())
  name String
  createdAt DateTime @default(now())
  updatedAt DateTime?
  items Item[]
}

model ShippingDetail {
  id Int @id @default(autoincrement())
  isFreeShipping Boolean
  shippingFee Float?
  trackingNumber String
  shippingDate DateTime
  instruction String?
  createdAt DateTime @default(now())
  updatedAt DateTime?
  itemId Int @unique
  item Item @relation(fields: [itemId], references: [id])
  shippingAddress ShippingAddress?
}

model ShippingAddress {
  id           Int       @id @default(autoincrement())
  addressLine1 String
  addressLine2 String?
  city         String
  province     String
  postalCode   String
  country      String    @default("Canada")
  profileId    Int       @unique
  createdAt    DateTime  @default(now())
  updatedAt    DateTime?
  shippingDetailId Int @unique
  shippingDetail ShippingDetail @relation(fields: [shippingDetailId], references: [id])
}